#!/usr/bin/env bash

# Default values
OUTPUT_DIR="${HOME}/Videos"
FILENAME="recording_$(date +'%Y-%m-%d_%H-%M-%S').mkv"
AUDIO_INPUT="default"  # Set to "none" for no audio
SCREEN_AREA="full"     # Options: "full", "region", or "window"
BITRATE="4000K"        # Video bitrate
FPS="30"               # Frames per second
OUTPUT=""
DURATION=""

# Ensure output directory exists
mkdir -p $OUTPUT_DIR

# Display help message
show_help() {
  echo "Usage: $0 [-o output_directory] [-f filename] [-a audio_input] [-s screen_area] [-b bitrate] [-r fps] [-d duration]"
  echo "  -o output_directory: Directory to save the recording (default: $HOME/Videos)"
  echo "  -f filename: Name of the output file (default: recording_<timestamp>.mkv)"
  echo "  -a audio_input: Audio input device or 'none' for no audio (default: default)"
  echo "  -s screen_area: 'full' for full screen, 'region' to select a region, or 'window' to select a window (default: full)"
  echo "  -b bitrate: Set the video bitrate (default: 4000K)"
  echo "  -r fps: Set the frames per second (default: 30)"
  echo "  -d duration: Set the maximum duration for the recording (e.g., 00:05:00 for 5 minutes)"
  exit 0
}

# Parse options
while getopts "o:f:a:s:b:r:d:h" opt; do
  case $opt in
    o) OUTPUT_DIR="$OPTARG" ;;
    f) FILENAME="$OPTARG" ;;
    a) AUDIO_INPUT="$OPTARG" ;;
    s) SCREEN_AREA="$OPTARG" ;;
    b) BITRATE="$OPTARG" ;;
    r) FPS="$OPTARG" ;;
    d) DURATION="$OPTARG" ;;
    h) show_help ;;
    *) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
  esac
done

# Select output if not provided
if [[ -z $OUTPUT ]]; then
  echo "Available outputs:"
  swaymsg -t get_outputs | jq -r '.[] | "\(.name) - \(.make) \(.model) \(.scale)x scale, \(.rect.width)x\(.rect.height) resolution"'
  read -rp "Select an output to record (leave blank for default): " OUTPUT
fi

# Validate selected output
if [[ -n $OUTPUT && ! $(swaymsg -t get_outputs | jq -r ".[] | select(.name == \"$OUTPUT\") | .name") ]]; then
  echo "Error: Invalid output specified." >&2
  exit 1
fi

# Build wf-recorder command
CMD=(wf-recorder -f $OUTPUT_DIR/$FILENAME -c h264_vaapi -p $FPS --codec-options bitrate="$BITRATE")

# Add screen area options
case $SCREEN_AREA in
  region) CMD+=(--geometry "$(slurp)") ;;
  window) CMD+=(--output "$(swaymsg -t get_tree | jq -r '.. | select(.focused? == true).rect | "\(.x),\(.y) \(.width)x\(.height)"')")" ;;
  full) [[ -n $OUTPUT ]] && CMD+=(--output "$OUTPUT") ;;
esac

# Add audio input if not "none"
[[ $AUDIO_INPUT != "none" ]] && CMD+=(-a "$AUDIO_INPUT")

# Add duration if provided
[[ -n $DURATION ]] && CMD+=(--max-duration "$DURATION")

# Notify and start recording
notify-send "Recording started" "Output: $OUTPUT_DIR/$FILENAME"
"${CMD[@]}"
notify-send "Recording stopped" "Saved to $OUTPUT_DIR/$FILENAME"

echo "Recording saved to $OUTPUT_DIR/$FILENAME"