#!/usr/bin/env bash

_exit() {
  rm -f /var/tmp/mirror.lock
  echo -e "$2"
  exit $1
}

PROTOCOL="https"
MIRROR_DIR="/etc/pacman.d"
declare -A MIRRORLISTS=(
  ["arch"]="mirrorlist"
  ["cachyos"]="cachyos-mirrorlist"
  ["chaotic-aur"]="chaotic-mirrorlist"
)

RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
RESET="\033[0m"

[ $EUID -ne 0 ] && _exit 1 "${RED}This script requires root.${RESET}"

command -v rate-mirrors &>/dev/null || _exit 1 "${RED}Error: 'rate-mirrors' is not installed.${RESET}"

if [[ -f /var/tmp/mirror.lock ]]; then
  _exit 1 "${RED}Error: Another instance of this script is running.${RESET}"
fi

touch /var/tmp/mirror.lock

TOTAL_MIRRORS=${#MIRRORLISTS[@]}
c=0

echo -e "${YELLOW}Starting mirror list updates...${RESET}"
sleep 0.5
for i in "${!MIRRORLISTS[@]}"; do
  echo -ne "[${YELLOW}$((++c))/$TOTAL_MIRRORS${RESET}] ${YELLOW}Updating $i mirrors...${RESET}\033[0K\r"

  if rate-mirrors --allow-root --disable-comments-in-file --protocol $PROTOCOL --save="$MIRROR_DIR/${MIRRORLISTS[$i]}" "$i" >/dev/null 2>&1; then
    echo -e "[${GREEN}$c/$TOTAL_MIRRORS${RESET}] ${GREEN}$i mirrors updated successfully.${RESET}"
  else
    echo -e "[${RED}$c/$TOTAL_MIRRORS${RESET}] ${RED}Error: Failed to update $i mirrors.${RESET}"
    _exit 1 "${RED}Failed to update $i mirrors. Exiting.${RESET}"
  fi

  sleep 1.5
done

_exit 0 "${GREEN}All mirror lists updated successfully.${RESET}"